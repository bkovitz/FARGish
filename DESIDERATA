MODEL

    Focal point: search only nodes "near" this, but possibly consider nodes
    (e.g. in the slipnet or long-term memory) that are far away.

    Watchers should be nodes in the graph.

        Wanted should be a watcher. It becomes more salient if its taggee
        heats up.

    Follow old temporal traces.

    It shouldn't be necessary to think through the movement of Avail tags
    carefully. If something goes wrong with those tags, the model itself
    should correct it.


IMPLEMENTATION

    Find some way for watchers like CloseNumbersTagger to not need to
    look at all the Number nodes.

    There should be a common way to pass a Tag class along with its
    arguments, so the node gets built at the right time. For example,
    a WasWanted node should know how to rebuild the tag that it
    replaced, if the WasWanted fails or cascade_fails.

    There should be a nice way for a Response constructor to detect that
    it can't work, and prevent itself from being added to the array of
    Responses. Whatever information the Response must dig up from the graph
    or compute should be saved, as needed, for the .go() method.


LANGUAGE

    The Python code for the Watchers and Responses is starting to get
    repetitive. This suggests opportunities for a simple language to
    specify "When you see this, change it to this."
