Some new tags and taggers:

    ALittleBelowWanted  (i.e. not via OoM)

    FarBelowWanted

    BelowWanted  (superclass)

    DistanceToWanted

    AboveWanted

    ALittleAboveWanted

    FarAboveWanted: should make the tagged node less visible to search.


    Semaphore:

        No more Avail Numbers.


    Diagnosis:

        TooHigh

    Repair:

        Try changing Times to Plus.

        Try changing Plus to Times.

        TryASmallerOperand

        TryABiggerOperand

        JustAbandonThis


Smaller steps:

    NoticeCouldMakePlus, etc. -> build the Plus but don't work out the
    result. Let that be estimated before calculated.

    CalculateExactResult


To make it easier to read the log:

    Proposal(ConsumeOperands()) should show the operands and operator.

    pg(g, Tagged(Avail)): show the tagged nodes, not the Avail tags.

    AssessProposal: print the numerical assessment.

    'succeeded': show what was built, or anything else of note.

    Somehow return an annotation, only from nodes that do something big.
    Or perhaps have multiple levels of annotation. Or maybe 'annotation'
    is the highest level.


To make it easier to define tags and taggers:

    @classmethod
    Tag.tagger()

    ('xyz', LookFor(...))   Sets asgn_to='xyz'. This should make 'acs' lists
    more readable.  ('acs' lists should actually be tuples, because they
    should never be modified. But would this foul up as_iter()?)


Wanted in a graphical visualization:

    A pane that shows all the active nodes or actions collected, sorted however
    you like.

    A pane with a running graph of the activation and support levels of
    selected nodes.

    The ability to scroll panes back to previous timesteps.


Want to fix or understand these current perplexities in the model:

