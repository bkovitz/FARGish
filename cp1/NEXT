Clean-up

    Move a working Model.py to v1/.

ajaqb

    List all the software elements needed to implement ajaqb.  DONE?

    NEXT Rename Subst.value_of() to Subst.

    ? Pare down Model.py so that Env contains the main interesting code:
    as_determinate_addr, as_func, as_value_at

    eval-as det-addr 1

    eval-as det-addr 'a'

    eval-as det-addr (x, x+2, same)

Painters

    Absolute painter.  DONE

    Relative painter: source matches a value; target is left or right of
    the source.

        A match address: a value to match, returning its absolute address. DONE

        Match address returns an env.  DONE

        Target address calculates address from offset in env.  DONE

    Fizzle  DONE

    QPainter: source matches a value, target is an absolute painter. DONE

    SPainter: source matches an absolute painter, target is an absolute painter.

        Match an absolute painter.

    Refactor so that all painters are tuples. Different kinds of painters
    should be distinguished by different Python classes for their sources,
    targets, and funcs.

        Model.paint()

        Model.get_value() ?

        PainterAddr: Some way to paint a painter in the model.

Spontaneous generation of painters

    Generate absolute painter with a basis func.  DONE

    Generate relative painter with a constant func, that paints between two
    values related by a basis func.

Regeneration

    Regenerate 'abc' from 'a  '.  DONE

        Write .regenerate()  DONE

    Regenerate 'ajaqb' from 'a    '.


Override an element of a painter

    Override canvas

    Override source

    Override target

    Override func
