externalFuncs: { pair, chooseSubclass, arithResult, DONE, tag, untag,
  neighbor, neighbors, NodeWithTag, Just1NodeWithTag, OfClass, build }

tags -- taggees
source -- consumer
operands :: source
builder -- built

Tag
  taggees

Avail, Consumed, Failed :: Tag

Number(n)
  value = n

Target :: Number

Brick :: Number
  consumer

Block :: Number
  source, consumer

Operator
  operands, consumer

Plus, Times :: Operator

Want(target)
  scout: OperandsScout
  scout: BacktrackingScout(target)
  scout: DoneScout(target)

OperandsScout
  see p := pair(NodeWithTag(Number, Avail))
      opClass := chooseSubclass(Operator)
  => build(ConsumeOperands(opClass, p))

ConsumeOperands(operatorClass, nodes)
  => op := build(operatorClass, linkFrom=nodes)
     r := build(Block(arithResult(op)), linkFrom=op)
     tag(Consumed, nodes)
     untag(Avail, nodes)
     tag(Avail, r)

DoneScout(target)
  see x := Just1NodeWithTag(Number, Avail), x == target
  => DONE

BacktrackingScout(target)
  see x := Just1NodeWithTag(Number, Avail), x != target
  => tag(Failed, x)
     untag(Avail, x)
     op := source(x), OfClass(Operator, op))
     srcs := operands(op)
     tag(Failed, x, op, builder(x, op))
     untag(Consumed, srcs)
     tag(Avail, srcs)
